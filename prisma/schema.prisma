generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model category {
  id           Int            @id @unique(map: "sqlite_autoindex_category_1") @default(autoincrement())
  cat_id       Int?           @unique(map: "sqlite_autoindex_category_2")
  cat_name_bn  String?
  cat_name_en  String?
  no_of_subcat Int?
  no_of_dua    Int?
  cat_icon     String?
  dua          dua[]
  sub_category sub_category[]
}

model dua {
  uid                Int           @id @default(autoincrement())
  id                 Int?
  cat_id             Int?
  subcat_id          Int?
  dua_id             Int?
  dua_name_bn        String?
  dua_name_en        String?
  top_bn             String?
  top_en             String?
  dua_arabic         String?
  dua_indopak        String?
  clean_arabic       String?
  transliteration_bn String?
  transliteration_en String?
  translation_bn     String?
  translation_en     String?
  bottom_bn          String?
  bottom_en          String?
  refference_bn      String?
  refference_en      String?
  audio              String?
  category           category?     @relation(fields: [cat_id], references: [cat_id], onDelete: NoAction, onUpdate: NoAction)
  sub_category       sub_category? @relation(fields: [subcat_id], references: [subcat_id], onDelete: NoAction, onUpdate: NoAction)
}

model sub_category {
  id             Int       @id @default(autoincrement())
  cat_id         Int?
  subcat_id      Int?      @unique(map: "sqlite_autoindex_sub_category_1")
  subcat_name_bn String?
  subcat_name_en String?
  no_of_dua      Int?
  dua            dua[]
  category       category? @relation(fields: [cat_id], references: [cat_id], onDelete: NoAction, onUpdate: NoAction)
}
